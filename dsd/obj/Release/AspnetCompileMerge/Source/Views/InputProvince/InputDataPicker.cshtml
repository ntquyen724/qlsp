@model FormModel
<div class="DTTT btn-group">
    <div class="attachFile_section">
        <button type="button" class="btn btn-info attachFile" data-id="@Model.IDInput" data-rel="#AttachFiles" data-file-url="@Model.FileUrl" data-target="#CrProjectFormFile"
                data-file-name="FileName" data-file-path="Path">
            <i class="glyphicon glyphicon-upload "></i> @Locate.T("Tải file")
        </button>
    </div>
</div>
<div>
    <div class="inputdetailResizable" id="input-data">
        <div class="inputdetailResizableLeft resizable">
            <div class="inputdetailScroll useScrollBar">
                <div class="widget-body widget_form_table">
                    <form id="FrmCrForm" data-bv-feedbackicons-validating="glyphicon glyphicon-refresh" data-bv-feedbackicons-invalid="glyphicon glyphicon-remove" data-bv-feedbackicons-valid="glyphicon glyphicon-ok"
                          title="@ViewBag.Title" action="@Model.Url" class="form-horizontal  bv-form validateForm quickSubmitForm successOnRefresh" method="post" novalidate="novalidate">
                        <div class="container-fluid">
                            @{
                                var oTarget = Target.Instance.GetById(Model.Form.IDTarget) ?? new Target();
                                var oTargetType = TargetType.Instance.GetById(oTarget.IDTargetType) ?? new TargetType();
                                var oCategory = Category.Instance.GetById(oTarget.IDUnit) ?? new Category();
                            }
                            <div class="form-group has-feedback">
                                <label class="col-lg-12 control-label text-align-left"><b>@Locate.T("Nhóm chỉ tiêu: ") (@oTargetType.Code) @oTargetType.Name</b></label>
                            </div>
                            <div class="form-group has-feedback">
                                <label class="col-lg-12 control-label text-align-left"><b>@Locate.T("Chỉ tiêu: ") (@oTarget.Code) @oTarget.Name</b></label>
                            </div>
                            <div class="form-group has-feedback">
                                <label class="col-lg-12 control-label text-align-left"><b>@Locate.T("Biểu: ") (@Model.Form.Code) @Model.Form.Name</b></label>
                            </div>
                            <div class="form-group has-feedback">
                                <label class="col-lg-12 control-label"><b>@Locate.T("Đơn vị tính: ") @oCategory.Name</b></label>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <table id="TblTeamsDetail" class="table table-bordered treegridview" role="grid" aria-describedby="searchable_info">
                                        <thead>
                                            @for (int i = 1; i <= (int)ViewBag.MaxRows; i++)
                                            {
                                                <tr role="row">
                                                    @if (i == 1)
                                                    {
                                                        <th rowspan='@ViewBag.MaxRows' class="wauto center"></th>
                                                    }
                                                    @foreach (var col in Model.TableTreModels)
                                                    {
                                                        if (col.RowIndex == i)
                                                        {
                                                            <th rowspan='@col.Rowspan' colspan='@col.Colspan' class="wpx120 center">@col.Name</th>
                                                        }
                                                    }
                                                </tr>
                                            }
                                        </thead>
                                        <tbody>
                                            @foreach (var row in Model.ContentTargets)
                                            {
                                                var stringParent = row.Parent > 0 ? string.Format("treegrid-parent-{0}", row.Parent) : string.Empty;
                                                <tr class="treegrid-@row.ID @stringParent">
                                                    <td>@row.Name</td>
                                                    @foreach (var col in Model.TableTreModels)
                                                    {
                                                        if (col.Colspan == 1 && col.Id > 0)
                                                        {
                                                            var item = Model.InputDetails.Find(p => p.IDProperties == col.Id && p.IDContentTarget == row.ID && p.IDType == row.IDType) ?? new InputDetail();
                                                            string sName = string.Format("Name-{0}-{1}-{2}", row.ID, row.IDType, col.Id);
                                                            <td style="margin:0; padding:0;">
                                                                @Html.CusTextBoxNumberic("id" + sName, sName, item.Value, "", "", false, new { @style = "margin:0; padding:0; height:100%;border:none" }, 0)
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <input type="hidden" value="@Model.IDInput" name="IDInput" />
                                    <input type="hidden" value="@Model.IDForm" name="IDForm" />
                                    <input type="hidden" value="@Model.IDInputArea" name="IDInputArea" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-8 col-lg-offset-4">

                                    <button type="submit" class="btn btn-info">@Locate.T("Xong")</button>
                                </div>
                            </div>
                            <div class="form-group has-feedback">
                                <label class="col-lg-12 control-label text-align-left"><b>@Locate.T("Hướng dẫn nhập") </b></label>
                            </div>
                            <div class="form-group has-feedback">
                                <div class="col-lg-12">
                                    @*@Html.CusTextBox("CrtDescribe", "Describe", @Model.Form.Describe, Locate.T("Ghi chú"), Locate.T("Ghi chú"), 10)*@
                                    @Html.CusTextBox("CrtOtherName", "OtherName", "", Locate.T("Ghi chú"), Locate.T("Ghi chú"), false, null)
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        @{
            // Test
            var stgdoc = new StgDoc
            {
                Path = Model.Input.Path,
                Extension = Path.GetExtension(Model.Input.Path)
            };
        }
        <div class="inputdetailResizableRight">
            <div class="useScrollBar">
                @if (!string.IsNullOrEmpty(Model.Input.Path))
                {
                    <div class="inputdetailFileName">
                        <ul id="CrProjectFormFile">

                            <li class="fileitem member">
                                <a title="@Locate.T("xem file")" target="_blank" href="">
                                    <span class="fileNames">@Model.Input.FileName</span>
                                </a>
                                <input name="Path" class="filePaths" type="hidden" value="file.Path">
                                <button type="button" class="btn btn-xs btn-link views delMember"></button>
                                <button type="button" class="btn btn-xs btn-link close delMember"></button>
                            </li>
                        </ul>
                    </div>
                    @(new HtmlString(Utils.RenderViewer(stgdoc)))
                }
            </div>
        </div>
    </div>
</div>
