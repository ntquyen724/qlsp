@model FormModel
<form id="FrmCrForm" data-bv-feedbackicons-validating="glyphicon glyphicon-refresh" data-bv-feedbackicons-invalid="glyphicon glyphicon-remove" data-bv-feedbackicons-valid="glyphicon glyphicon-ok"
      title="@ViewBag.Title" action="@Model.Url" class="form-horizontal  bv-form validateForm quickSubmit successOnRefresh" method="post" novalidate="novalidate">
    <div class="container-fluid">
        <aside class="arrow">@Locate.T("Thông tin chung")</aside>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group has-feedback">
                    <label class="col-lg-4 control-label">@Locate.T("Nhóm chỉ tiêu")</label>
                    <div class="col-lg-8">
                        @Html.CusDropdownList("IDTargetType", "IDTargetType", null, Model.TargetTypes.Select(x => new SelectListItem() { Text = x.Name, Value = x.ID.ToString(), Selected = (x.ID == Model.Form.IDTargetType) }).ToList(), new { @class = "form-control input-sm select_change_form_target", @data_url = Locate.Url("/form/TargetPicker.html"), @data_target = "#target-child", @data_url_2 = Locate.Url("/form/TargetProPicker.html"), @data_target_2 = "#target-pro-child" }, @Locate.T("Nhóm chỉ tiêu"), true)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div>
                    <div class="form-group has-feedback">
                        <label class="col-lg-4 control-label">@Locate.T("Chỉ tiêu")</label>
                        <div class="col-lg-8" id="target-child">
                            @Html.CusDropdownList("IDTarget", "IDTarget", Locate.T("--- Chọn chỉ tiêu ---"), Model.Targets.Select(x => new SelectListItem() { Text = x.Name, Value = x.ID.ToString(), Selected = (x.ID == Model.Form.IDTarget) }).ToList(), new { @class = "form-control input-sm select_change", @data_url = Locate.Url("/form/TargetProPicker.html"), @data_target = "#target-pro-child" }, @Locate.T("Chỉ tiêu"), true)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group has-feedback">
                    <label class="col-lg-4 control-label">@Locate.T("Mã biểu mẫu")<span class="red">*</span></label>
                    <div class="col-lg-8">
                        @Html.CusTextBox("CrtCode", "Code", @Model.Form.Code, Locate.T("Mã biểu mẫu"), Locate.T("Mã biểu mẫu"), true, null, 25)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group has-feedback">
                    <label class="col-lg-4 control-label">@Locate.T("Trạng thái")<span class="red">*</span></label>
                    <div class="col-lg-8">
                        @Html.DropDownList("Status", Utils.GetDescribes<DocProUBDT.Customs.Enum.FormStatus>().Select(x => new SelectListItem() { Text = x.Value, Value = x.Key.ToString(), Selected = (x.Key == Model.Form.Status) }).ToList(), new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group has-feedback">
            <label class="col-lg-2 control-label">@Locate.T("Tên biểu mẫu")<span class="red">*</span></label>
            <div class="col-lg-10">
                @Html.CusTextBox("CrtName", "Name", @Model.Form.Name, Locate.T("Tên biểu mẫu"), Locate.T("Tên biểu mẫu"), true, null, 250)
            </div>
        </div>
        <aside class="arrow">@Locate.T("Thông tin chi tiết")</aside>
        <div class="form-group has-feedback">
            <label class="col-lg-2 control-label">@Locate.T("Thuộc tính")</label>
            <div class="col-lg-10" id="target-pro-child">
                <select name="IDProperties" multiple class="selectpicker show-tick form-group" title="@Locate.T("Chọn thuộc tính")" data-size="5" data-container="body" data-width="100%">
                    @if (Utils.IsNotEmpty<TargetPro>(Model.TargetPros))
                    {
                        foreach (var item in Model.TargetPros)
                        {
                            <option @(Model.IDProperties.Contains("," + item.ID + ",") ? "selected" : "") value="@item.ID">@item.Name</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="form-group has-feedback">
            <label class="col-lg-2 control-label">@Locate.T("Loại nội dung")</label>
            <div class="col-lg-10">
                <select name="IDContentTargetType" multiple class="selectpicker show-tick form-group" title="@Locate.T("Chọn loại nội dung")" data-size="5" data-container="body" data-width="100%">
                    @if (Utils.IsNotEmpty(Model.ContentTargetTypes))
                    {
                        foreach (var item in Model.ContentTargetTypes)
                        {
                            <option @(Model.IDContentTargetType.Contains("," + item.ID + ",") ? "selected" : "") value="@item.ID">@item.Name</option>
                        }
                    }
                </select>
            </div>
        </div>
        <aside class="arrow">@Locate.T("Hướng dẫn nhập")</aside>
        <div class="form-group has-feedback">
            <label class="col-lg-2 control-label">@Locate.T("Ghi chú")</label>
            <div class="col-lg-10">
                @Html.CusTextArea("CrtDescribe", "Describe", @Model.Form.Describe, Locate.T("Ghi chú"), Locate.T("Ghi chú"), 4)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <p id="messeage_err" class="red"></p>
                <input type="hidden" value="@Model.Form.ID" name="ID" />
                <button type="submit" class="btn btn-info">@Locate.T("Xong")</button>
            </div>
        </div>
    </div>
</form>
